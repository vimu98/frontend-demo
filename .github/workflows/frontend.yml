name: Deploy Vite App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: List dist contents
      run: |
        echo "Listing dist directory contents:"
        ls -al dist

    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: dist
        target: ~/frontend

    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "Freeing up port 80 if in use..."
          CONTAINER_ID=$(docker ps --filter "publish=80" --format "{{.ID}}")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Port 80 is in use by container $CONTAINER_ID. Stopping and removing it..."
            docker stop $CONTAINER_ID
            docker rm $CONTAINER_ID
          fi

          echo "Stopping and removing vite-app container if it exists..."
          docker stop vite-app || true
          docker rm vite-app || true

          echo "Removing vite-app image if exists..."
          docker rmi vite-app || true

          echo "Creating Dockerfile in ~/frontend..."
          cat > ~/frontend/Dockerfile <<EOF
          FROM nginx:alpine
          COPY dist /usr/share/nginx/html
          EXPOSE 80
          EOF

          echo "Building Docker image..."
          cd ~/frontend
          docker build -t vite-app .

          echo "Running Docker container..."
          docker run -d -p 80:80 --name vite-app vite-app
